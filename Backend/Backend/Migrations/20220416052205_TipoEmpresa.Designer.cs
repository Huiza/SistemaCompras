// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220416052205_TipoEmpresa")]
    partial class TipoEmpresa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend.Models.Empresa", b =>
                {
                    b.Property<string>("nit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar=9");

                    b.Property<string>("Nrc")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("varchar=17");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=150");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.Property<string>("perfilId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("representante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.Property<int?>("rubro")
                        .IsRequired()
                        .HasColumnType("varchar=100");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar=9");

                    b.Property<string>("telefonoMovil")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar=9");

                    b.Property<string>("tipoEmpresaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.HasKey("nit");

                    b.HasIndex("perfilId");

                    b.HasIndex("tipoEmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Backend.Models.Perfil", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("calificacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar=1");

                    b.Property<string>("escrituras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.Property<string>("razonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar=100");

                    b.Property<bool>("sucursal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Backend.Models.TipoEmpresa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tipo")
                        .HasColumnType("varchar=100");

                    b.HasKey("Id");

                    b.ToTable("TipoEmpresa");
                });

            modelBuilder.Entity("Backend.Models.Empresa", b =>
                {
                    b.HasOne("Backend.Models.Perfil", "perfil")
                        .WithMany()
                        .HasForeignKey("perfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.TipoEmpresa", "tipoEmpresa")
                        .WithMany()
                        .HasForeignKey("tipoEmpresaId");

                    b.Navigation("perfil");

                    b.Navigation("tipoEmpresa");
                });
#pragma warning restore 612, 618
        }
    }
}
